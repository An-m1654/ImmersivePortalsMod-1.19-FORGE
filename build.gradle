plugins {
	id 'fabric-loom' version '0.2.7-SNAPSHOT'//'0.2.3-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
	accessWidener = file("src/main/resources/imm_ptl.accesswidener")
}

repositories {

	maven { url 'https://jitpack.io' }

}

dependencies {
//	modCompile 'com.github.modmuss50:OptiFabric:1.0.0-beta4'

	//Deps required for optifabric
	compile 'org.zeroturnaround:zt-zip:1.13'
	compile('net.fabricmc:stitch:0.2.1.61') {
		transitive = false
	}

	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.

	//modImplementation "io.github.Ladysnake:Requiem:1.1.4"
	//modImplementation "io.github.Ladysnake:Requiem:1.1.4:api"

	//used for building mod
	compileOnly files('ofpre10.jar')

	modImplementation "me.shedaniel.cloth:config-2:4.5.0-unstable"
	modImplementation "io.github.prospector:modmenu:1.11.8+build.13"

	include "me.shedaniel.cloth:config-2:4.5.0-unstable"
	include "io.github.prospector:modmenu:1.11.8+build.13"

	//For javax.annotation.Nullable
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	// https://github.com/OnyxStudios/Cardinal-Components-API
//	modApi "io.github.OnyxStudios.Cardinal-Components-API:Cardinal-Components-API:2.4.0-nightly.1.16-pre2"
//	include "io.github.OnyxStudios.Cardinal-Components-API:Cardinal-Components-API:2.4.0-nightly.1.16-pre2"

}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

repositories {
	flatDir {
		dirs 'deps'
	}

	jcenter()
	maven {
		name = 'JitPack'
		url = 'https://jitpack.io'
	}
	maven {
		url = 'https://maven.fabricmc.net'
	}
}

task printClasspath {
	doLast {
		configurations.testCompile.each { println it }
	}
}