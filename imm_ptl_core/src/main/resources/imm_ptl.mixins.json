{
  "required": true,
  "package": "qouteall.imm_ptl.core.mixin",
  "compatibilityLevel": "JAVA_16",
  "plugin": "qouteall.imm_ptl.core.IPMixinPlugin",
  "mixins": [
    "common.MixinCommandManager",
    "common.MixinLivingEntity",
    "common.MixinMetricsData",
    "common.MixinMinecraftDedicatedServer",
    "common.MixinMinecraftServer",
    "common.MixinPlayerManager",
    "common.MixinProfilerSystem",
    "common.MixinRaycastContext",
    "common.MixinServerChunkManager",
    "common.MixinServerWorld",
    "common.MixinWorld",
    "common.MixinWorldChunk",
    "common.chunk_sync.MixinChunkHolder",
    "common.chunk_sync.MixinChunkTicketManager",
    "common.chunk_sync.MixinCustomPayloadS2CPacket",
    "common.chunk_sync.MixinServerPlayerEntity",
    "common.chunk_sync.MixinThreadedAnvilChunkStorage_C",
    "common.collision.MixinAbstractDecorationEntity",
    "common.collision.MixinAbstractMinecartEntity",
    "common.collision.MixinEntity",
    "common.collision.MixinProjectileEntity",
    "common.collision.MixinSnowballEntity",
    "common.entity_sync.MixinEntityTracker",
    "common.entity_sync.MixinEntityTrackerEntry",
    "common.entity_sync.MixinServerEntityManager",
    "common.entity_sync.MixinServerPlayerEntity",
    "common.entity_sync.MixinServerPlayNetworkHandler_E",
    "common.entity_sync.MixinThreadedAnvilChunkStorage_E",
    "common.mc_util.IESimpleEntityLookup",
    "common.mc_util.MixinEntity_U",
    "common.mc_util.MixinEntityTrackingSection",
    "common.mc_util.MixinSectionedEntityCache",
    "common.portal_generation.MixinItemEntity_P",
    "common.portal_generation.MixinItemStack",
    "common.portal_generation.MixinMinecraftServer_P",
    "common.portal_generation.MixinPlayerManager_P",
    "common.position_sync.MixinPlayerMoveC2SPacket_S",
    "common.position_sync.MixinPlayerMoveC2SPacketFull",
    "common.position_sync.MixinPlayerMoveC2SPacketLookAndOnGround",
    "common.position_sync.MixinPlayerMoveC2SPacketOnGroundOnly",
    "common.position_sync.MixinPlayerMoveC2SPacketPositionAndOnGround",
    "common.position_sync.MixinPlayerPositionLookS2CPacket",
    "common.position_sync.MixinServerPlayNetworkHandler"
  ],
  "client": [
    "client.MixinClientConnection",
    "client.MixinClientLevel",
    "client.MixinDebugScreenOverlay",
    "client.MixinGlDebug",
    "client.MixinLivingEntity_C",
    "client.MixinMatrix4f",
    "client.MixinMinecraft",
    "client.block_manipulation.MixinMultiPlayerGameMode",
    "client.block_manipulation.MixinGameRenderer_B",
    "client.block_manipulation.MixinMinecraft_B",
    "client.collisions.MixinLocalPlayer",
    "client.render.MixinGameRenderer_I",
    "client.multiworld_awareness.MixinFogRenderer",
    "client.multiworld_awareness.MixinBiomeAmbientSoundPlayer",
    "client.particle.IEParticle",
    "client.particle.MixinParticleEngine",
    "client.render.MixinBlockEntityRenderDispatcher",
    "client.render.MixinRenderChunk",
    "client.render.MixinCamera",
    "client.render.MixinEntityRenderDispatcher",
    "client.render.MixinGameRenderer",
    "client.render.MixinGlStateManager",
    "client.render.MixinScreenEffectRenderer",
    "client.render.MixinRenderSystem_Clipping",
    "client.render.MixinRenderSystem_Fog",
    "client.render.MixinShaderInstanceForIris",
    "client.render.MixinMultiBufferSourceBufferSource",
    "client.render.MixinLevelRenderer",
    "client.render.MixinLevelRenderer_Optional",
    "client.render.framebuffer.MixinRenderTarget",
    "client.render.framebuffer.MixinMainTarget",
    "client.render.optimization.MixinChunkRenderDispatcher_Optimization",
    "client.render.optimization.MixinFrustum",
    "client.render.optimization.MixinLevelRenderer_Clouds",
    "client.render.shader.MixinGameRenderer_Shaders",
    "client.render.shader.MixinProgram",
    "client.render.shader.MixinShaderInstance",
    "client.sound.MixinClientLevel_Sound",
    "client.sync.MixinClientPacketListener",
    "client.sync.MixinServerBoundMovePlayerPacket",
    "client.sync.MixinServerBoundMovePlayerPacketPosRot",
    "client.sync.MixinServerboundMovePlayerPacketRot",
    "client.sync.MixinServerboundMovePlayerPacketStatusOnly",
    "client.sync.MixinServerboundMovePlayerPacketPos",
    "client.sync.MixinClientboundPlayerPositionPacket"
  ],
  "injectors": {
    "defaultRequire": 1
  }
}
